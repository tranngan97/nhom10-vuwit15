/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Common.CopyFile_resizeImg;
import Controller.Manage_Staff_CONTROLLER;
import static Views.Add_New_Product_GUI.dst;
import Model.Staff;
import Model.Product;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Nguyen Hiep
 */
public class Update_Staff_GUI extends javax.swing.JFrame {

    static String Working_Directory = System.getProperty("user.dir");
    static String default_url = Working_Directory + "\\src\\images\\";
    static String uploads_url = Working_Directory + "\\src\\images\\uploads\\";
    Manage_Staff_CONTROLLER control = new Manage_Staff_CONTROLLER();
    private File from;
    private Object up;
    private Staff staff;

    /**
     * Creates new form Add_new_staff_GUI
     */
    public Update_Staff_GUI(Staff temp) {
        initComponents();
        setLocationRelativeTo(null);

        this.staff = temp;
// add avatar:
        String name = temp.getImage();
        //String newurl =  url.replaceAll("[^\\w .-]+","_");;
        CopyFile_resizeImg up = new CopyFile_resizeImg();
        File tempFile = new File(default_url + name);
        if (tempFile.exists()) {
            staff_ava.setIcon(up.ResizeImage(staff_ava, default_url + name, null));
        } else {
            staff_ava.setIcon(up.ResizeImage(staff_ava, uploads_url + name, null));
        }
// set tên nhân viên+ sdt:
        this.jTextField_Name.setText(temp.getName());
        this.jTextField_PhoneNumber.setText(temp.getPhone_number());
// set ngày sinh:
        Calendar cal = Calendar.getInstance();
        cal.setTime(temp.getDate_of_birth());
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        this.jComboBox_day.setSelectedIndex(day - 1);
        this.jTextField_year.setText(String.valueOf(year));
        this.jComboBox_month.setSelectedIndex(month);
//number only trong ô year
        ((AbstractDocument) jTextField_year.getDocument()).setDocumentFilter(new DocumentFilter() {
            Pattern regEx = Pattern.compile("\\d*");

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                Matcher matcher = regEx.matcher(text);
                if (!matcher.matches()) {
                    return;
                }
                super.replace(fb, offset, length, text, attrs);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        staff_ava = new javax.swing.JLabel(){
            ImageIcon icon = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/profile.png")));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_Name = new javax.swing.JTextField();
        jComboBox_day = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_month = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jTextField_year = new javax.swing.JTextField();
        jTextField_PhoneNumber = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Cập nhật nhân viên");

        jLabel3.setText("Tên nhân viên:");

        jLabel4.setText("Ngày sinh:");

        jLabel5.setText("Số điện thoại:");

        jComboBox_day.setModel(new javax.swing.DefaultComboBoxModel(new String[]
            { "1", "2", "3", "4","5","6","7","8","9",
                "10","11", "12", "13", "14","15","16","17","18","19",
                "20","21", "22", "23", "24","25","26","27","28","29",
                "30","31"}));

    jLabel6.setText("/");

    jComboBox_month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr","May","June","July","Aug","Sept","Oct","Nov","Dec" }));

    jLabel7.setText("/");

    ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/upload_image.png")); // NOI18N
    Image img = icon.getImage() ;
    Image newimg = img.getScaledInstance( 30, 30,  java.awt.Image.SCALE_SMOOTH ) ;
    icon = new ImageIcon( newimg );
    jButton2.setIcon(icon);
    jButton2.setText("Choose file");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setText("Cập nhật");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 167, Short.MAX_VALUE)
            .addComponent(jLabel1)
            .addGap(145, 145, 145))
        .addGroup(layout.createSequentialGroup()
            .addGap(100, 100, 100)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(staff_ava, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(30, 30, 30)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6)
                        .addGap(5, 5, 5)
                        .addComponent(jComboBox_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_year))
                    .addComponent(jTextField_PhoneNumber)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(jLabel1)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(staff_ava, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(79, 79, 79)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(34, 34, 34)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(20, 20, 20)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jComboBox_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6)
                .addComponent(jComboBox_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7))
            .addGap(20, 20, 20)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
            .addComponent(jButton3)
            .addGap(23, 23, 23))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));

        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "png", "jpeg", "gif");
        file.addChoosableFileFilter(filter);

        CopyFile_resizeImg up = new CopyFile_resizeImg();
        int result = file.showSaveDialog(null);
        //if the user click on save in JFilechooser
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();

            //copy path and name file to cliboard
            String path = selectedFile.getAbsolutePath();
            this.from = selectedFile;
            //
            //Thay avata tạm thời
            staff_ava.setIcon(null);
            staff_ava.setIcon(up.ResizeImage(staff_ava, path, null));

        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No file select");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (this.jTextField_Name.getText().equals("") || this.jTextField_year.getText().equals("") || this.jTextField_PhoneNumber.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Tất cả các trường là bắt buộc", "sorry", JOptionPane.ERROR_MESSAGE);
        } else if (!check_Date_Valid()) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ", "sorry", JOptionPane.ERROR_MESSAGE);
        } else if (!check_Phone_Number_Valid()) {
            JOptionPane.showMessageDialog(null, "Số điệnt thoại không hợp lệ", "sorry", JOptionPane.ERROR_MESSAGE);
        } else {
            String name = this.jTextField_Name.getText();
            String day = (String) jComboBox_day.getSelectedItem();
            String month_input = (String) jComboBox_month.getSelectedItem();
            String month = "0";
            switch (month_input) {
                case "Jan":
                    month = "1";
                    break;
                case "Feb":
                    month = "2";
                    break;
                case "Mar":
                    month = "3";
                    break;
                case "Apr":
                    month = "4";
                    break;
                case "May":
                    month = "5";
                    break;
                case "June":
                    month = "6";
                    break;
                case "July":
                    month = "7";
                    break;
                case "Aug":
                    month = "8";
                    break;
                case "Sept":
                    month = "9";
                    break;
                case "Oct":
                    month = "10";
                    break;
                case "Nov":
                    month = "11";
                    break;
                case "Dec":
                    month = "12";
                    break;
                default:
                    break;
            }
            String year = jTextField_year.getText();
            String date_of_birth = day + "-" + month + "-" + year;
            String phone_number = jTextField_PhoneNumber.getText();
            Staff temp = null;
            if (this.from != null) {
                //Copy file ava gửi lên vào thư mục project
                String newName = this.from.getName().replaceAll("[^\\w .-]+", "_");
                File dest = new File(dst + newName);
                CopyFile_resizeImg up = new CopyFile_resizeImg();
                try {
                    up.copyFileUsingStream(this.from, dest);
                } catch (IOException ex) {
                    Logger.getLogger(Add_New_Product_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                String Anh_NV = newName;
                try {
                    this.staff.setName(name);
                    this.staff.setDate_of_birth(date_of_birth);
                    this.staff.setPhone_number(phone_number);
                    this.staff.setImage(Anh_NV);
                } catch (ParseException ex) {
                    Logger.getLogger(Add_New_Staff_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    this.staff.setName(name);
                    this.staff.setDate_of_birth(date_of_birth);
                    this.staff.setPhone_number(phone_number);
                } catch (ParseException ex) {
                    Logger.getLogger(Add_New_Staff_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (control.Update_Staff(this.staff)) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công", "congratulations", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "có gì đó sai sai", "sorry", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public boolean check_Date_Valid() {
        int day = Integer.parseInt((String) jComboBox_day.getSelectedItem());
        String month_input = (String) jComboBox_month.getSelectedItem();
        int month = 0;
        switch (month_input) {
            case "Jan":
                month = 1;
                break;
            case "Feb":
                month = 2;
                break;
            case "Mar":
                month = 3;
                break;
            case "Apr":
                month = 4;
                break;
            case "May":
                month = 5;
                break;
            case "June":
                month = 6;
                break;
            case "July":
                month = 7;
                break;
            case "Aug":
                month = 8;
                break;
            case "Sept":
                month = 9;
                break;
            case "Oct":
                month = 10;
                break;
            case "Nov":
                month = 11;
                break;
            case "Dec":
                month = 12;
                break;
            default:
                break;
        }
        int year = Integer.parseInt(jTextField_year.getText());
        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
            if (day >= 31) {
                return false;
            }
        } else if (month == 4 || month == 6 || month == 9 || month == 11) {
            if (day >= 30) {
                return false;
            }

        } else if (month == 2) // February check
        {
            if (year % 4 == 0) // Leap year check for February
            {
                if (day >= 29) {
                    return false;
                }
            } else if (year % 4 != 0) {
                if (day >= 28) {
                    return false;
                }
            }
        }
        return true;
    }

    public boolean check_Phone_Number_Valid() {
        String regexStr = "^(1\\-)?[0-9]{3}\\-?[0-9]{3}\\-?[0-9]{4}$";
        if (this.jTextField_PhoneNumber.getText().matches(regexStr)) {
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ParseException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update_Staff_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update_Staff_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update_Staff_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update_Staff_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Staff temp = new Staff();
                temp.getDetail("STF-1419-3802");
                new Update_Staff_GUI(temp).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox_day;
    private javax.swing.JComboBox jComboBox_month;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField_Name;
    private javax.swing.JTextField jTextField_PhoneNumber;
    private javax.swing.JTextField jTextField_year;
    private javax.swing.JLabel staff_ava;
    // End of variables declaration//GEN-END:variables
}
